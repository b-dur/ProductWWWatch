{"version":3,"sources":["../node_modules/@webcomponents/custom-elements/src/native-shim.js","../src/utils.ts","../src/index.ts"],"names":[],"mappings":"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","file":"src.9dac276e.js","sourceRoot":"../public","sourcesContent":["/**\n * @license\n * Copyright (c) 2016 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt\n */\n\n/**\n * This shim allows elements written in, or compiled to, ES5 to work on native\n * implementations of Custom Elements v1. It sets new.target to the value of\n * this.constructor so that the native HTMLElement constructor can access the\n * current under-construction element's definition.\n */\n(function() {\n  if (\n    // No Reflect, no classes, no need for shim because native custom elements\n    // require ES2015 classes or Reflect.\n    window.Reflect === undefined ||\n    window.customElements === undefined ||\n    // The webcomponentsjs custom elements polyfill doesn't require\n    // ES2015-compatible construction (`super()` or `Reflect.construct`).\n    window.customElements.hasOwnProperty('polyfillWrapFlushCallback')\n  ) {\n    return;\n  }\n  const BuiltInHTMLElement = HTMLElement;\n  window.HTMLElement = function HTMLElement() {\n    return Reflect.construct(BuiltInHTMLElement, [], this.constructor);\n  };\n  HTMLElement.prototype = BuiltInHTMLElement.prototype;\n  HTMLElement.prototype.constructor = HTMLElement;\n  Object.setPrototypeOf(HTMLElement, BuiltInHTMLElement);\n})();\n","export const getCode = (): string => {\n  const matchedResults = location.hash.match(/(?<=\\bcode=\\b)[^&]*/);\n  const [code] = matchedResults;\n  if (code) {\n    sessionStorage.setItem(\"code\", code);\n  } else {\n    return sessionStorage.getItem(\"code\");\n  }\n  return code;\n};\n\nexport const getFormValue = (form: HTMLFormElement): any => {\n  const formValues = {};\n  for (const e of form.elements) {\n    const input = <HTMLInputElement>e;\n    if (input.name) {\n      formValues[input.name] = input.value;\n    }\n  }\n  return formValues;\n};\n","import \"@webcomponents/custom-elements/src/native-shim\";\nimport { getCode, getFormValue } from \"./utils\";\n\nconst baseUrl = `https://productwatch.azurewebsites.net/api/watchers`;\n\ninterface IWatcher {\n  _id: string;\n  createdAt: number;\n  triggerPrice: number;\n  url: string;\n}\n\nfunction updateWatcherList(watchers: IWatcher[]) {\n  const watcherList = document.getElementById(\"watcherlist\");\n  if (watchers.length) {\n    watcherList.innerHTML = watchers\n      .map(renderItem)\n      .join(\"\");\n  } else {\n    watcherList.innerHTML = `<li>No data found</li>`;\n  }\n}\n\nfunction renderItem(watcher: IWatcher): string {\n  return `<li>\n  Created at: ${new Date(watcher.createdAt)}<br/>\n  Trigger price: ${watcher.triggerPrice}<br/>\n  Url: <a href=\"${watcher.url}\" target=\"_blank\">${watcher.url}</a><br/>\n  <button name=\"delete watcher\" value=\"${watcher._id}\" type=\"button\">delete</button>\n</li>`;\n}\n\nasync function loadContent() {\n  const url = `${baseUrl}?code=${getCode()}`;\n  const resp = await fetch(url);\n  const data: IWatcher[] = await resp.json();\n\n  updateWatcherList(data);\n}\nloadContent();\n\ndocument.forms\n  .namedItem(\"addWatcher\")\n  .addEventListener(\"submit\", (e: Event) => {\n    e.preventDefault();\n    const formValues = getFormValue(e.target as HTMLFormElement) as IWatcher;\n    formValues.createdAt = Date.now();\n\n    AddWatcher(formValues);\n  });\n\ndocument\n  .getElementById(\"watcherlist\")\n  .addEventListener(\"delete\", (e: Event) => {\n    const elm = e.srcElement as HTMLElement;\n    removeWatcher(elm.id);\n  });\n\nconst AddWatcher = async (watcher: IWatcher) => {\n  const url = `${baseUrl}?code=${getCode()}`;\n  await fetch(url, {\n    method: \"POST\",\n    body: JSON.stringify(watcher),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  });\n\n  loadContent();\n};\n\nconst removeWatcher = async (watcherId: string) => {\n  const url = `${baseUrl}/${watcherId}?code=${getCode()}`;\n  await fetch(url, { method: \"DELETE\" });\n\n  loadContent();\n};\n\n\ndocument.addEventListener('click', function (e) {\n  if (isButton(e.target) && e.target.name === 'delete watcher') {\n    removeWatcher(e.target.value)\n  }\n})\n\nconst isButton = (element: EventTarget): element is HTMLButtonElement => element instanceof HTMLButtonElement;\n\n"]}